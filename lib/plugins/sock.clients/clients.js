// Generated by CoffeeScript 1.6.3
var Client, Clients,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Client = require("./client");

Clients = (function(_super) {
  __extends(Clients, _super);

  /*
  */


  function Clients(_sock) {
    this._sock = _sock;
    this._onEvent = __bind(this._onEvent, this);
    this._conConnection = __bind(this._conConnection, this);
    this._clients = [];
    this._sock.on("connection", this._conConnection);
  }

  /*
  */


  Clients.prototype.send = function(data) {
    var client, _i, _len, _ref, _results;
    _ref = this._clients;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      client = _ref[_i];
      _results.push(client.send(data));
    }
    return _results;
  };

  /*
  */


  Clients.prototype._conConnection = function(con) {
    var client;
    this._clients.push(client = new Client(con, this));
    return client.on("event", this._onEvent);
  };

  /*
  */


  Clients.prototype._onEvent = function(event) {
    return this.emit(event.event, event);
  };

  return Clients;

})(require("events").EventEmitter);

module.exports = Clients;
