// Generated by CoffeeScript 1.6.3
var Tester, async;

async = require("async");

Tester = require("./tester");

exports.require = ["browser.launchers.*", "sock.clients", "tests", "config", "pubsub"];

exports.plugin = function(launcher, clients, tests, config, pubsub) {
  var browsers, limit, running, tester;
  browsers = config.get("browsers") || [];
  limit = config.get("limit") || 1;
  if (!browsers.length) {
    return;
  }
  running = false;
  tester = {
    run: function() {
      if (running) {
        return;
      }
      running = true;
      return async.eachLimit(browsers, limit, (function(browser, next) {
        return tester = new Tester(launcher, browser, clients, pubsub).run(next);
      }), function(err) {
        var hasError;
        running = false;
        hasError = false;
        if (err != null) {
          console.error(err.message);
          hasError = true;
        } else {
          console.log("completed tests without errors");
        }
        if (!config.get("keepAlive")) {
          return process.exit(Number(hasError));
        }
      });
    }
  };
  tests.on("bundle", tester.run);
  return tester;
};
