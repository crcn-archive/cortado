// Generated by CoffeeScript 1.6.3
var RemoteClient,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

RemoteClient = (function(_super) {
  __extends(RemoteClient, _super);

  /*
  */


  function RemoteClient() {
    this._onOpen = __bind(this._onOpen, this);
    this._onMessage = __bind(this._onMessage, this);
    this.send = __bind(this.send, this);
    var _this = this;
    this._socket = new SockJS("/sock");
    this._socket.onmessage = this._onMessage;
    this._socket.onopen = this._onOpen;
    this.once("ready", function() {
      return _this._ready = true;
    });
  }

  /*
  */


  RemoteClient.prototype.ready = function(cb) {
    var called;
    if (this._ready) {
      return cb();
    }
    called = false;
    return this.once("ready", function() {
      if (called) {
        return;
      }
      called = true;
      return cb();
    });
  };

  /*
  */


  RemoteClient.prototype.send = function(data) {
    return this._socket.send(JSON.stringify(data));
  };

  /*
  */


  RemoteClient.prototype._onMessage = function(event) {
    var d;
    d = JSON.parse(event.data);
    return this.emit(d.event, d.data);
  };

  /*
  */


  RemoteClient.prototype._onOpen = function() {
    this.emit("open", {
      platform: platform
    });
    return this.send({
      event: "open",
      data: {
        platform: platform
      }
    });
  };

  return RemoteClient;

})(require("events").EventEmitter);

module.exports = RemoteClient;
