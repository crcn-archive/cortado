// Generated by CoffeeScript 1.6.3
var MainView, RemoteClient, Url, actions, findXPath, models, onControlDocEvent, q, _ref;

if (typeof window.console === "undefined") {
  window.console = {};
  window.console.log = window.console.warn = window.console.error = function() {};
}

require("./views/components");

MainView = require("./views/main");

models = require("./models");

RemoteClient = require("./client");

Url = require("url");

findXPath = require("./utils/findXPath");

window.actions = actions = require("./actions")(models);

window.xpath = require("xpgen")();

window.expect = require("expect.js");

window.client = new RemoteClient();

client.on("reload", function() {
  return window.location.reload();
});

onControlDocEvent = function(event) {
  return models.set("selected.xpath", String(findXPath(event.target)));
};

models.bind("control.document", function(controlDoc, oldDoc) {
  if (oldDoc != null) {
    if (typeof oldDoc.removeEventListener === "function") {
      oldDoc.removeEventListener("mousedown", onControlDocEvent);
    }
  }
  return controlDoc != null ? typeof controlDoc.addEventListener === "function" ? controlDoc.addEventListener("mousedown", onControlDocEvent, true) : void 0 : void 0;
});

client.on("runTests", function() {
  return mocha.run();
});

$(document).ready(function() {
  var main;
  main = new MainView();
  return main.attach($("#application"));
});

mocha.setup({
  reporter: require("./reporters/mocha")(models, client),
  ui: "bdd",
  timeout: 1000 * 9999
});

q = (_ref = Url.parse(window.location.href, true).query) != null ? _ref : {};

client.ready(function() {
  return mocha.run();
});
