// Generated by CoffeeScript 1.6.3
var Log, bindable, _id,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

bindable = require("bindable");

_id = 0;

Log = (function(_super) {
  __extends(Log, _super);

  /*
  */


  function Log(data) {
    Log.__super__.constructor.call(this, this);
    this.set(data);
    this.set("_id", _id++);
  }

  /*
  */


  return Log;

})(bindable.Object);

module.exports = Log;
